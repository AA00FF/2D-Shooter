<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox_player.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        QmCC
</value>
  </data>
</root>